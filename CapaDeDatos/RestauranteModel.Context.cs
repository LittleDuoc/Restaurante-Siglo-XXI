//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDeDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Restaurante_Siglo_XXIEntities : DbContext
    {
        public Restaurante_Siglo_XXIEntities()
            : base("name=Restaurante_Siglo_XXIEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ATENCION> ATENCION { get; set; }
        public virtual DbSet<BOLETA> BOLETA { get; set; }
        public virtual DbSet<CATEGORIA> CATEGORIA { get; set; }
        public virtual DbSet<CATEGORIA_INSUMO> CATEGORIA_INSUMO { get; set; }
        public virtual DbSet<DETALLE_ORDEN> DETALLE_ORDEN { get; set; }
        public virtual DbSet<ESTADO_MESA> ESTADO_MESA { get; set; }
        public virtual DbSet<ESTADO_ORDEN> ESTADO_ORDEN { get; set; }
        public virtual DbSet<ESTADO_RESERVA> ESTADO_RESERVA { get; set; }
        public virtual DbSet<INSUMO> INSUMO { get; set; }
        public virtual DbSet<MARCA> MARCA { get; set; }
        public virtual DbSet<MEDIO_DE_PAGO> MEDIO_DE_PAGO { get; set; }
        public virtual DbSet<MESA> MESA { get; set; }
        public virtual DbSet<ORDEN> ORDEN { get; set; }
        public virtual DbSet<PEDIDO> PEDIDO { get; set; }
        public virtual DbSet<PREPARACION> PREPARACION { get; set; }
        public virtual DbSet<PROVEEDOR> PROVEEDOR { get; set; }
        public virtual DbSet<RECETA> RECETA { get; set; }
        public virtual DbSet<RESERVA> RESERVA { get; set; }
        public virtual DbSet<ROL> ROL { get; set; }
        public virtual DbSet<USUARIO> USUARIO { get; set; }
    
        public virtual int SP_Ingreso_de_pedidos(string id_pedido, string id_atencion, string id_mesa, string id_preparacion, Nullable<System.DateTime> fecha, Nullable<decimal> cantidad, Nullable<decimal> total)
        {
            var id_pedidoParameter = id_pedido != null ?
                new ObjectParameter("Id_pedido", id_pedido) :
                new ObjectParameter("Id_pedido", typeof(string));
    
            var id_atencionParameter = id_atencion != null ?
                new ObjectParameter("Id_atencion", id_atencion) :
                new ObjectParameter("Id_atencion", typeof(string));
    
            var id_mesaParameter = id_mesa != null ?
                new ObjectParameter("Id_mesa", id_mesa) :
                new ObjectParameter("Id_mesa", typeof(string));
    
            var id_preparacionParameter = id_preparacion != null ?
                new ObjectParameter("Id_preparacion", id_preparacion) :
                new ObjectParameter("Id_preparacion", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Ingreso_de_pedidos", id_pedidoParameter, id_atencionParameter, id_mesaParameter, id_preparacionParameter, fechaParameter, cantidadParameter, totalParameter);
        }
    
        public virtual int SP_Insercion_Empleados(string id_usuario, string rut, string nombre, string apellido_p, string apellido_m, string iD_rol, string dIreccion, string cOrreo, string password)
        {
            var id_usuarioParameter = id_usuario != null ?
                new ObjectParameter("Id_usuario", id_usuario) :
                new ObjectParameter("Id_usuario", typeof(string));
    
            var rutParameter = rut != null ?
                new ObjectParameter("Rut", rut) :
                new ObjectParameter("Rut", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido_pParameter = apellido_p != null ?
                new ObjectParameter("Apellido_p", apellido_p) :
                new ObjectParameter("Apellido_p", typeof(string));
    
            var apellido_mParameter = apellido_m != null ?
                new ObjectParameter("Apellido_m", apellido_m) :
                new ObjectParameter("Apellido_m", typeof(string));
    
            var iD_rolParameter = iD_rol != null ?
                new ObjectParameter("ID_rol", iD_rol) :
                new ObjectParameter("ID_rol", typeof(string));
    
            var dIreccionParameter = dIreccion != null ?
                new ObjectParameter("DIreccion", dIreccion) :
                new ObjectParameter("DIreccion", typeof(string));
    
            var cOrreoParameter = cOrreo != null ?
                new ObjectParameter("COrreo", cOrreo) :
                new ObjectParameter("COrreo", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insercion_Empleados", id_usuarioParameter, rutParameter, nombreParameter, apellido_pParameter, apellido_mParameter, iD_rolParameter, dIreccionParameter, cOrreoParameter, passwordParameter);
        }
    
        public virtual ObjectResult<SP_recetas_Result> SP_recetas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_recetas_Result>("SP_recetas");
        }
    
        public virtual ObjectResult<SP_Total_mas_vendido_Result> SP_Total_mas_vendido()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Total_mas_vendido_Result>("SP_Total_mas_vendido");
        }
    }
}
